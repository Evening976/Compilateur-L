Package lParser;

Helpers

digit = ['0' .. '9'];
true = 'true';
false = 'false';

Tokens

spaces = (' ' | 13 | 10)+;
commentary= '#' [[0 .. 0xffff] - [10 + 13]]* (10 | 13 | 10 13);
plus = '+';
divide = '/';
minus = '-';
mult = '*';
egal = '=';
less = '<';
and = '&';
or = '|';
not = '!';
number = digit+;
if = 'if';
else = 'else';
then = 'then';
while = 'while';
return = 'return';
function = 'function';
l_par = '(';
r_par = ')';
l_brace = '{';
r_brace = '}';

Ignored Tokens

spaces, commentary;

Productions


#l'axiome

programme = exp ;



exp =
     {plus} exp plus number             |
     {number} number                    |
     {minus} exp minus number           |
     {mult} exp mult number             |
     {divide} exp divide number         ;

comparision = 
     {egal} exp egal exp                |
     {less} exp less exp                |
     {and} exp and exp                  |
     {or} exp or exp                    |
     {not} not exp                      ;

condition =
     {ifthen} if comparision then exp       |
     {ifelse} if comparision then exp else exp ;
     

