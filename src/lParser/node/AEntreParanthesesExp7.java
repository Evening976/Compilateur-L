/* This file was generated by SableCC (http://www.sablecc.org/). */

package lParser.node;

import lParser.analysis.*;

@SuppressWarnings("nls")
public final class AEntreParanthesesExp7 extends PExp7
{
    private TParentheseGauche _parentheseGauche_;
    private PExp _exp_;
    private TParentheseDroite _parentheseDroite_;

    public AEntreParanthesesExp7()
    {
        // Constructor
    }

    public AEntreParanthesesExp7(
        @SuppressWarnings("hiding") TParentheseGauche _parentheseGauche_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TParentheseDroite _parentheseDroite_)
    {
        // Constructor
        setParentheseGauche(_parentheseGauche_);

        setExp(_exp_);

        setParentheseDroite(_parentheseDroite_);

    }

    @Override
    public Object clone()
    {
        return new AEntreParanthesesExp7(
            cloneNode(this._parentheseGauche_),
            cloneNode(this._exp_),
            cloneNode(this._parentheseDroite_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEntreParanthesesExp7(this);
    }

    public TParentheseGauche getParentheseGauche()
    {
        return this._parentheseGauche_;
    }

    public void setParentheseGauche(TParentheseGauche node)
    {
        if(this._parentheseGauche_ != null)
        {
            this._parentheseGauche_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parentheseGauche_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TParentheseDroite getParentheseDroite()
    {
        return this._parentheseDroite_;
    }

    public void setParentheseDroite(TParentheseDroite node)
    {
        if(this._parentheseDroite_ != null)
        {
            this._parentheseDroite_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parentheseDroite_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._parentheseGauche_)
            + toString(this._exp_)
            + toString(this._parentheseDroite_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._parentheseGauche_ == child)
        {
            this._parentheseGauche_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._parentheseDroite_ == child)
        {
            this._parentheseDroite_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._parentheseGauche_ == oldChild)
        {
            setParentheseGauche((TParentheseGauche) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._parentheseDroite_ == oldChild)
        {
            setParentheseDroite((TParentheseDroite) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
