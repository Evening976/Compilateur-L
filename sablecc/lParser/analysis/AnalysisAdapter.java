/* This file was generated by SableCC (http://www.sablecc.org/). */

package lParser.analysis;

import java.util.*;
import lParser.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgramme(AProgramme node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecvarListedecvar(ADecvarListedecvar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListedecvar(AVideListedecvar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARestedecvarListedecvar1(ARestedecvarListedecvar1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListedecvar1(AVideListedecvar1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarsimpleDecvar(AVarsimpleDecvar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVartabDecvar(AVartabDecvar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEntierType(AEntierType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABooleanType(ABooleanType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecfonctionListedecfonc(ADecfonctionListedecfonc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListedecfonc(AVideListedecfonc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFonction(AFonction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATypevarTypeoptionnel(ATypevarTypeoptionnel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideTypeoptionnel(AVideTypeoptionnel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocBlocinstructions(ABlocBlocinstructions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInstructionsListeinstructions(AInstructionsListeinstructions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListeinstructions(AVideListeinstructions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAffectationInstruction(AAffectationInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATantqueInstruction(ATantqueInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASialorsInstruction(ASialorsInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASisinonInstruction(ASisinonInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetourInstruction(ARetourInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEcrireInstruction(AEcrireInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdInstruction(AIdInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdentificateurVar(AIdentificateurVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACasetableauVar(ACasetableauVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListeparametresListeexpressions(AListeparametresListeexpressions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListeexpressions(AVideListeexpressions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAResteparametrescommencantvirguleListeexpressions1(AResteparametrescommencantvirguleListeexpressions1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListeexpressions1(AVideListeexpressions1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOuExpression(AOuExpression node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpression1Expression(AExpression1Expression node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEtExpression1(AEtExpression1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpression2Expression1(AExpression2Expression1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEgalExpression2(AEgalExpression2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInfExpression2(AInfExpression2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpression3Expression2(AExpression3Expression2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusExpression3(APlusExpression3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMoinsExpression3(AMoinsExpression3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpression5Expression3(AExpression5Expression3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultExpression4(AMultExpression4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivExpression4(ADivExpression4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpression5Expression4(AExpression5Expression4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonExpression5(ANonExpression5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpression6Expression5(AExpression6Expression5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParenthesesExpression6(AParenthesesExpression6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarExpression6(AVarExpression6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANombreExpression6(ANombreExpression6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAppelfonction2Expression6(AAppelfonction2Expression6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALireExpression6(ALireExpression6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVraiExpression6(AVraiExpression6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFauxExpression6(AFauxExpression6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEspaces(TEspaces node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommentaire(TCommentaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMoins(TMoins node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNombre(TNombre node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEt(TEt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNon(TNon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParG(TParG node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParD(TParD node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEgal(TEgal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInf(TInf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAccG(TAccG node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAccD(TAccD node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCroG(TCroG node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCroD(TCroD node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSi(TSi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTq(TTq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRetour(TRetour node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAlors(TAlors node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntier(TEntier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSinon(TSinon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBool(TBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaire(TFaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLire(TLire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEcrire(TEcrire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgule(TVirgule node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPVirgule(TPVirgule node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVrai(TVrai node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaux(TFaux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
