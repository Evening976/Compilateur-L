/* This file was generated by SableCC (http://www.sablecc.org/). */

package lParser.node;

import lParser.analysis.*;

@SuppressWarnings("nls")
public final class AAppelFonctionInstruction extends PInstruction
{
    private TIdentif _identif_;
    private TParentheseGauche _parentheseGauche_;
    private PListeExp _listeExp_;
    private TParentheseDroite _parentheseDroite_;
    private TPointVirgule _pointVirgule_;

    public AAppelFonctionInstruction()
    {
        // Constructor
    }

    public AAppelFonctionInstruction(
        @SuppressWarnings("hiding") TIdentif _identif_,
        @SuppressWarnings("hiding") TParentheseGauche _parentheseGauche_,
        @SuppressWarnings("hiding") PListeExp _listeExp_,
        @SuppressWarnings("hiding") TParentheseDroite _parentheseDroite_,
        @SuppressWarnings("hiding") TPointVirgule _pointVirgule_)
    {
        // Constructor
        setIdentif(_identif_);

        setParentheseGauche(_parentheseGauche_);

        setListeExp(_listeExp_);

        setParentheseDroite(_parentheseDroite_);

        setPointVirgule(_pointVirgule_);

    }

    @Override
    public Object clone()
    {
        return new AAppelFonctionInstruction(
            cloneNode(this._identif_),
            cloneNode(this._parentheseGauche_),
            cloneNode(this._listeExp_),
            cloneNode(this._parentheseDroite_),
            cloneNode(this._pointVirgule_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAppelFonctionInstruction(this);
    }

    public TIdentif getIdentif()
    {
        return this._identif_;
    }

    public void setIdentif(TIdentif node)
    {
        if(this._identif_ != null)
        {
            this._identif_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identif_ = node;
    }

    public TParentheseGauche getParentheseGauche()
    {
        return this._parentheseGauche_;
    }

    public void setParentheseGauche(TParentheseGauche node)
    {
        if(this._parentheseGauche_ != null)
        {
            this._parentheseGauche_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parentheseGauche_ = node;
    }

    public PListeExp getListeExp()
    {
        return this._listeExp_;
    }

    public void setListeExp(PListeExp node)
    {
        if(this._listeExp_ != null)
        {
            this._listeExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listeExp_ = node;
    }

    public TParentheseDroite getParentheseDroite()
    {
        return this._parentheseDroite_;
    }

    public void setParentheseDroite(TParentheseDroite node)
    {
        if(this._parentheseDroite_ != null)
        {
            this._parentheseDroite_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parentheseDroite_ = node;
    }

    public TPointVirgule getPointVirgule()
    {
        return this._pointVirgule_;
    }

    public void setPointVirgule(TPointVirgule node)
    {
        if(this._pointVirgule_ != null)
        {
            this._pointVirgule_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pointVirgule_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._identif_)
            + toString(this._parentheseGauche_)
            + toString(this._listeExp_)
            + toString(this._parentheseDroite_)
            + toString(this._pointVirgule_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._identif_ == child)
        {
            this._identif_ = null;
            return;
        }

        if(this._parentheseGauche_ == child)
        {
            this._parentheseGauche_ = null;
            return;
        }

        if(this._listeExp_ == child)
        {
            this._listeExp_ = null;
            return;
        }

        if(this._parentheseDroite_ == child)
        {
            this._parentheseDroite_ = null;
            return;
        }

        if(this._pointVirgule_ == child)
        {
            this._pointVirgule_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._identif_ == oldChild)
        {
            setIdentif((TIdentif) newChild);
            return;
        }

        if(this._parentheseGauche_ == oldChild)
        {
            setParentheseGauche((TParentheseGauche) newChild);
            return;
        }

        if(this._listeExp_ == oldChild)
        {
            setListeExp((PListeExp) newChild);
            return;
        }

        if(this._parentheseDroite_ == oldChild)
        {
            setParentheseDroite((TParentheseDroite) newChild);
            return;
        }

        if(this._pointVirgule_ == oldChild)
        {
            setPointVirgule((TPointVirgule) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
