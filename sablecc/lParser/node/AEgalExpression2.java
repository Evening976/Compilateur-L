/* This file was generated by SableCC (http://www.sablecc.org/). */

package lParser.node;

import lParser.analysis.*;

@SuppressWarnings("nls")
public final class AEgalExpression2 extends PExpression2
{
    private PExpression2 _expression2_;
    private TEgal _egal_;
    private PExpression3 _expression3_;

    public AEgalExpression2()
    {
        // Constructor
    }

    public AEgalExpression2(
        @SuppressWarnings("hiding") PExpression2 _expression2_,
        @SuppressWarnings("hiding") TEgal _egal_,
        @SuppressWarnings("hiding") PExpression3 _expression3_)
    {
        // Constructor
        setExpression2(_expression2_);

        setEgal(_egal_);

        setExpression3(_expression3_);

    }

    @Override
    public Object clone()
    {
        return new AEgalExpression2(
            cloneNode(this._expression2_),
            cloneNode(this._egal_),
            cloneNode(this._expression3_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEgalExpression2(this);
    }

    public PExpression2 getExpression2()
    {
        return this._expression2_;
    }

    public void setExpression2(PExpression2 node)
    {
        if(this._expression2_ != null)
        {
            this._expression2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expression2_ = node;
    }

    public TEgal getEgal()
    {
        return this._egal_;
    }

    public void setEgal(TEgal node)
    {
        if(this._egal_ != null)
        {
            this._egal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._egal_ = node;
    }

    public PExpression3 getExpression3()
    {
        return this._expression3_;
    }

    public void setExpression3(PExpression3 node)
    {
        if(this._expression3_ != null)
        {
            this._expression3_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expression3_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expression2_)
            + toString(this._egal_)
            + toString(this._expression3_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expression2_ == child)
        {
            this._expression2_ = null;
            return;
        }

        if(this._egal_ == child)
        {
            this._egal_ = null;
            return;
        }

        if(this._expression3_ == child)
        {
            this._expression3_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expression2_ == oldChild)
        {
            setExpression2((PExpression2) newChild);
            return;
        }

        if(this._egal_ == oldChild)
        {
            setEgal((TEgal) newChild);
            return;
        }

        if(this._expression3_ == oldChild)
        {
            setExpression3((PExpression3) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
